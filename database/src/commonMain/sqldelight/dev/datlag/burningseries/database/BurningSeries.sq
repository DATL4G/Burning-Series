CREATE TABLE DBSeries(
    href TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    coverHref TEXT,
    favoriteSince INTEGER NOT NULL
);

CREATE TABLE DBEpisode(
    href TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    number TEXT NOT NULL,
    length INTEGER NOT NULL,
    watchProgress INTEGER NOT NULL,
    seriesHref TEXT NOT NULL,
    FOREIGN KEY (seriesHref) REFERENCES DBSeries(href) ON DELETE NO ACTION
);

selectAllSeries:
SELECT * FROM DBSeries;

selectSeriesByHref:
SELECT * FROM DBSeries WHERE href = :href OR href LIKE :href;

selectLatestSeriesAmount:
SELECT * FROM DBSeries WHERE favoriteSince > 0 ORDER BY favoriteSince DESC LIMIT :amount;

insertSeries:
INSERT OR REPLACE INTO DBSeries(href, title, coverHref, favoriteSince)
VALUES (?, ?, ?, ?);

deleteSeries:
DELETE FROM DBSeries WHERE href = :href;

selectEpisodeByHref:
SELECT * FROM DBEpisode WHERE href = :href OR href LIKE :href;

selectEpisodesBySeriesHref:
SELECT * FROM DBEpisode WHERE seriesHref = :href OR seriesHref LIKE :href;

insertEpisode:
INSERT OR IGNORE INTO DBEpisode(href, title, number, length, watchProgress, seriesHref)
VALUES (?, ?, ?, ?, ?, ?);

updateEpisodeWatchProgress:
UPDATE DBEpisode SET watchProgress = :position WHERE href = :href OR href LIKE :href;

updateEpisodeLength:
UPDATE DBEpisode SET length = :length WHERE href = :href OR href LIKE :href;
