CREATE TABLE IF NOT EXISTS Series(
    hrefPrimary TEXT NOT NULL PRIMARY KEY,
    href TEXT NOT NULL,
    title TEXT NOT NULL,
    coverHref TEXT,
    favoriteSince INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS Episode(
    href TEXT NOT NULL PRIMARY KEY,
    number TEXT NOT NULL,
    title TEXT NOT NULL,
    length INTEGER NOT NULL,
    progress INTEGER NOT NULL,
    seriesHref TEXT NOT NULL,
    FOREIGN KEY (seriesHref) REFERENCES Series(hrefPrimary) ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS Hoster(
    href TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    episodeHref TEXT NOT NULL,
    FOREIGN KEY (episodeHref) REFERENCES Episode(href) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SearchItem(
    href TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    genre TEXT NOT NULL
);

insertSeries:
INSERT OR REPLACE INTO Series(hrefPrimary, href, title, coverHref, favoriteSince) VALUES (?, ?, ?, ?, ?);

insertSeriesOrIgnore:
INSERT OR IGNORE INTO Series(hrefPrimary, href, title, coverHref, favoriteSince) VALUES (?, ?, ?, ?, ?);

favoriteSeries:
SELECT * FROM Series WHERE favoriteSince > 0 ORDER BY favoriteSince DESC;

seriesByHref:
SELECT * FROM Series WHERE hrefPrimary = :href OR hrefPrimary LIKE :href;

updateSeriesFavoriteSince {
    UPDATE Series SET favoriteSince = :since WHERE hrefPrimary = :hrefPrimary OR hrefPrimary LIKE :hrefPrimary;

    INSERT OR IGNORE INTO Series (hrefPrimary, href, title, coverHref, favoriteSince) VALUES (:hrefPrimary, :href, :title, :coverHref, :since);
}

insertEpisode:
INSERT OR IGNORE INTO Episode(href, number, title, length, progress, seriesHref) VALUES (?, ?, ?, ?, ?, ?);

updateEpisodeLength {
    UPDATE Episode SET length = :length WHERE href = :href OR href LIKE :href;

    INSERT OR IGNORE INTO Episode (href, number, title, length, progress, seriesHref) VALUES (:href, :number, :title, :length, :progress, :seriesHref);
}

updateEpisodeProgress {
    UPDATE Episode SET progress = :progress WHERE href = :href OR href LIKE :href;

    INSERT OR IGNORE INTO Episode (href, number, title, length, progress, seriesHref) VALUES (:href, :number, :title, :length, :progress, :seriesHref);
}

selectEpisodeByHref:
SELECT * FROM Episode WHERE href = :href OR href LIKE :href;

selectEpisodesBySeriesHref:
SELECT * FROM Episode WHERE seriesHref = :href OR seriesHref LIKE :href;

insertHoster:
INSERT OR IGNORE INTO Hoster (href, title, episodeHref) VALUES (?, ?, ?);

selectHosterByEpisodeHref:
SELECT * FROM Hoster WHERE episodeHref = :href OR episodeHref LIKE :href;

insertSearchItem:
INSERT OR IGNORE INTO SearchItem (href, title, genre) VALUES ?;

selectAllSearchItems:
SELECT * FROM SearchItem;