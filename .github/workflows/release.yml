name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  package:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Ubuntu
        continue-on-error: true
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y fuse3; sudo apt-get install -y fuse

      - name: Export libraries on Unix
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: ./gradlew app:exportLibraryDefinitions

      - name: Export libraries on Windows
        if: matrix.os == 'windows-latest'
        run: .\gradlew app:exportLibraryDefinitions
        working-directory: ${{ github.workspace }}

      - name: Create package on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew app:packageDeb

      - name: Create AppImage on Ubuntu
        continue-on-error: true
        if: matrix.os == 'ubuntu-latest'
        run: |
          ./gradlew app:packageAppImage
          mkdir -p ./build/release/main/image/Burning-Series/usr
          curl --request GET --url https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage --location --output ./build/release/main/image/appimagetool.AppImage
          curl --request GET --url https://github.com/AppImage/AppImageKit/releases/download/continuous/AppRun-x86_64 --location --output ./build/release/main/image/Burning-Series/AppRun
          chmod +x ./build/release/main/image/appimagetool.AppImage
          chmod +x ./build/release/main/image/Burning-Series/AppRun
          cp ./app/thirdParty/Burning-Series.desktop ./build/release/main/image/Burning-Series/
          cp ./build/release/main/app/Burning-Series/lib/Burning-Series.png ./build/release/main/image/Burning-Series/
          cp -r ./build/release/main/app/Burning-Series/bin ./build/release/main/image/Burning-Series/usr/
          cp -r ./build/release/main/app/Burning-Series/lib ./build/release/main/image/Burning-Series/usr/
          ./build/release/main/image/appimagetool.AppImage ./build/release/main/image/Burning-Series ./build/release/main/image/Burning-Series-${{  github.ref_name }}-x86_64.AppImage
          tar cJf ./build/release/main/app/Burning-Series.tar.xz ./build/release/main/app/Burning-Series

      - name: Create Browser Extension on Ubuntu
        continue-on-error: true
        if: matrix.os == 'ubuntu-latest'
        run: |
          ./gradlew extension:pack

      - name: Create package on Windows
        if: matrix.os == 'windows-latest'
        run: .\gradlew app:packageExe; .\gradlew app:packageMsi
        working-directory: ${{ github.workspace }}

      - name: Create package on Mac
        if: matrix.os == 'macos-latest'
        run: ./gradlew app:packageDmg

      - name: Upload release packages
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./build/release/main/app/Burning-Series.tar.xz
            ./build/release/main/image/Burning-Series-${{  github.ref_name }}-x86_64.AppImage
            ./build/release/main/deb/*.deb
            ./build/release/main/rpm/*.rpm
            ./build/release/main/dmg/*.dmg
            build/release/main/exe/*.exe
            build/release/main/msi/*.msi
            ./build/release/main/extension/*.zip

  app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Build
        run: ./gradlew assembleRelease && ./gradlew bundleRelease

      - name: Move APK file(s)
        run: mv ./app/build/outputs/apk/release/*.apk ./app/release/

      - name: Move AAB file(s)
        run: mv ./app/build/outputs/bundle/release/*.aab ./app/release/

      - name: Remove "-unsigned" from filename(s)
        run: for filename in ./app/release/*-unsigned*; do mv "./$filename" "./$(echo "$filename" | sed -e 's/-unsigned//g')";  done

      - name: List all release files
        run: ls ./app/release/

      - uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: app/release
          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
          keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
          buildToolsVersion: 30.0.2

      - name: List signed files
        run: echo "Signed ${{ steps.sign_app.outputs.signedFilesCount }} files called ${{ steps.sign_app.outputs.signedFiles }}"

      - name: Split signed files
        uses: JungWinter/split@v2.1.0
        id: split
        with:
          msg: ${{ steps.sign_app.outputs.signedFiles }}
          separator: ':'
          maxsplit: 2

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.split.outputs._0 }}
            ${{ steps.split.outputs._1 }}
